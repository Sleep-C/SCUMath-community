<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--https://mybatis.org/mybatis-3/zh/getting-started.html入门找已映射的sql语句copy过来-->
<mapper namespace="com.nowcoder.community.dao.CommentMapper">
    <!--papermapper路径-->
    <!--每一个对应于papermapper的一个-->
    <sql id="insertFields">
        user_id, entity_type, entity_id, target_id, target_id2, content, status, create_time, type, notice_table
    </sql><!--定义标签-->
    <sql id="selectFields">
        id, user_id, entity_type, entity_id, target_id, content, status, create_time, type, notice_table
    </sql>
    <select id="selectById" resultType="Comment">
        select <include refid="selectFields"></include>
        from comment
        where id = #{id}
    </select>
    <select id="selectByEntityAndPage" resultType="Comment">
        select <include refid="selectFields"></include>
        from comment
        where status = #{status}
        and entity_type = #{entityType}
        and entity_id = #{entityId}
        order by create_time asc
        limit #{offset}, #{limit}
    </select>
    <select id="selectByTwoTarget" resultType="Comment">
        select <include refid="selectFields"></include>
        from comment
        where (target_id = #{userId} or target_id2 = #{userId} ) and user_id != #{userId}
        order by create_time desc
    </select>
    <select id="selectCountByEntity" resultType="int">
        select count(id)
        from comment
        where status = 0
        and entity_type = #{entityType}
        and entity_id = #{entityId}
    </select>
    <select id="selectByUserid" resultType="Comment">
        select <include refid="selectFields"></include>
        from comment
        where user_id = #{userid}
    </select>
    <select id="selectByEntity" resultType="Comment">
        select <include refid="selectFields"></include>
        from comment
        where entity_type = #{entitytype} and entity_id = #{entityid} and status = #{status}
        order by create_time asc
    </select>
    <select id="selectByEntityandtargitid" resultType="Comment">
        select <include refid="selectFields"></include>
        from comment
        where entity_type = #{entitytype} and entity_id = #{entityid} and target_id != #{targetid} and status = #{status}
        order by create_time asc<!--按照时间正序排列，先评论的在前-->
    </select>
    <select id="selectByTargetid" resultType="Comment">
        select <include refid="selectFields"></include>
        from comment
        where status = 0 and target_id = #{targetid}
        order by create_time asc<!--按照时间正序排列，先评论的在前-->
    </select>

    <select id="selectCommentsByTable" resultType="Comment">
        select <include refid="selectFields"></include>
        from comment
        where notice_table = #{table} and status = #{status}
        order by create_time desc<!--按照时间倒序排列，后通知的在前-->
    </select>
    <select id="countByEntity" resultType="int">
        select count(id) from comment where entity_id = #{entityId} and entity_type = #{entityType}
    </select>

    <insert id="insertComment" parameterType="Comment" keyProperty="id">
        insert into comment (<include refid="insertFields"></include>)
        values(#{userid}, #{entitytype}, #{entityid}, #{targetid}, #{targetid2}, #{content},#{status},#{createtime},#{type},#{table})
    </insert>

    <delete id="deleteById">
        delete from comment where id = #{id}
    </delete>
    <delete id="deleteByEntity">
        delete from comment where entity_id = #{entityId} and entity_type = #{entityType}
    </delete>
    <select id="selectByTableAndEntity" resultType="Comment">
        select <include refid="selectFields"></include>
        from comment
        where entity_type = #{entityType} and entity_id = #{entityId} and notice_table = #{table}
    </select>
    <update id="updateTable">
        update comment set notice_table = #{table} where id = #{commentId}
    </update>
</mapper>
