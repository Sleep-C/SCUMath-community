<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--https://mybatis.org/mybatis-3/zh/getting-started.html入门找已映射的sql语句copy过来-->
<mapper namespace="com.nowcoder.community.dao.UserMapper">
    <!--usermapper路径-->
    <!--每一个对应于usermapper的一个-->
    <sql id="insertFields"><!---->
        username, password, salt, email, type, status, activation_code,  create_time
    </sql><!--定义标签-->

    <sql id="selectFields"><!---->
        id, username, password, salt, email, type, status, activation_code, create_time
    </sql>

    <select id="selectById" resultType="User">
        select <include refid="selectFields"></include><!---->
        <!--上面等价于select id, username, password, salt, email, type, status, activation_code,  create_time-->
        from user
        where id = #{id}<!--#字段表明引用方法的参数int id-->
    </select>

    <select id="selectByName" resultType="User">
        select <include refid="selectFields"></include>
        from user
        where username = #{username}
    </select>
    <!--查询标签，id要对应usermapper中的方法名。返回类型User，本来应该写上路径的但application.properties中配置了默认路径-->
    <select id="selectByEmail" resultType="User">
        select <include refid="selectFields"></include>
        from user
        where email = #{email}
    </select>
    <!--insert标签 parameterType声明参数类型 keyproperty表明id字段主键对应属性（添加数据时不会输入id的mysql会自动生成id，mybatis从mysql得到后自动填入user）-->
    <insert id="insertUser" parameterType="User" keyProperty="id">
        insert into user (<include refid="insertFields"></include>)
        values(#{username}, #{password}, #{salt}, #{email}, #{type}, #{status}, #{activationCode}, #{createTime})
    </insert>
    <!--update标签-->
    <update id="updateStatus">
        update user set status = #{status} where id = #{id}
    </update>


    <update id="updatePassword">
        update user set password = #{password} ,salt = #{salt} where id = #{id}
    </update>


</mapper>